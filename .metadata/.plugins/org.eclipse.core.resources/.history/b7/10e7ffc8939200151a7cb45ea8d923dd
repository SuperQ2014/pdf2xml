package skyler.tao.pdf2xml;

import com.itextpdf.text.pdf.parser.ImageRenderInfo;
import com.itextpdf.text.pdf.parser.TextExtractionStrategy;
import com.itextpdf.text.pdf.parser.TextRenderInfo;
import com.itextpdf.text.pdf.parser.Vector;

public class SemTextExtractionStrategy implements TextExtractionStrategy {

	private String text;
	private Vector lastBaseLine;
    private String lastFont;
    private float lastFontSize;
    
    private enum TextRenderMode {
        FillText,
        StrokeText,
        FillThenStrokeText,
        Invisible,
        FillTextAndAddToPathForClipping,
        StrokeTextAndAddToPathForClipping,
        FillThenStrokeTextAndAddToPathForClipping,
        AddTextToPaddForClipping
    }

	public void beginTextBlock() {
	}

	@Override
	public void renderText(TextRenderInfo renderInfo) {
		text = renderInfo.getText();

		System.out.println(renderInfo.getFont().getFontType());

		System.out.print(text);
	}

	public void endTextBlock() {
	}

	public void renderImage(ImageRenderInfo renderInfo) {
	}

	public String getResultantText() {
		return text;
	}

	public void renderImage(ImageRenderInfo arg0) {
		// TODO Auto-generated method stub
		
	}

	public void renderText(TextRenderInfo arg0) {
		// TODO Auto-generated method stub
		
	}
}
